services:
  postgres:
    restart: always
    build:
      context: ./postgis
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-apollo}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    restart: always
    image: redis:7

  web:
    restart: always
    build:
      context: .
      target: ${ENV:-production}
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy
        restart: true
    links:
      - postgres
      - redis
    environment:
      DATABASE_NAME: ${DATABASE_NAME:-apollo}
    env_file:
      - ./.env
    volumes:
      - upload_data:/app/uploads
    ports:
      - "5000:5000"
    command: ['gunicorn', '-c', 'gunicorn.conf']

  worker:
    restart: always
    build:
      context: .
      target: ${ENV:-production}
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy
        restart: true
    links:
      - postgres
      - redis
    environment:
      DATABASE_NAME: ${DATABASE_NAME:-apollo}
    env_file:
      - ./.env
    volumes:
      - upload_data:/app/uploads
    command: ['./manage.py', 'worker']

volumes:
  postgres_data:
  upload_data:
