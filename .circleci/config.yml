version: 2

jobs:
  build:
    docker:
      - image: circleci/python:3.6.4
        environment:
          - TEST_DATABASE_HOSTNAME: localhost
          - TEST_DATABASE_USERNAME: postgres
          - TEST_DATABASE_PASSWORD: notapassword
          - SECRET_KEY: notasecret
          - REDIS_HOSTNAME: localhost

      - image: circleci/postgres:10-alpine-postgis-ram
        environment:
          - POSTGRES_DB: apollo
          - POSTGRES_USER: postgres
          - POSTGRES_PASSWORD: notapassword

      - image: circleci/redis:4-alpine

    steps:
      - checkout
      - run: sudo pip install -r requirements/dev.txt
      - run: nosetests apollo/
    # The resource_class feature allows configuring CPU and RAM resources for each job. Different resource classes are available for different executors. https://circleci.com/docs/2.0/configuration-reference/#resourceclass
    resource_class: large

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
